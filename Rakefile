languages = ['English', 'French', 'Spanish', 'Russian']

def run(command, min_exit_status = 0)
  puts "Executing: `#{command}`"
  system(command)
  return $?.exitstatus
end

task :default => :spec

desc 'Run unit tests'
task :spec do
  status = languages.map do |lang|
    puts "===\n=== Running tests for #{lang}\n==="
    run "xcodebuild -workspace FormatterKit.xcworkspace -scheme #{lang} -sdk iphonesimulator -derivedDataPath build/DerivedData/#{lang} test | bundle exec xcpretty --test && exit ${PIPESTATUS[0]}"
  end.max.to_i

  exit status
end

namespace :coverage do
  desc 'Consolidates coverage files generated by `rake spec` into one file.'
  task :consolidate do
    paths = languages.map do |lang|
      "build/DerivedData/#{lang}/Build/Intermediates/CodeCoverage/Coverage.profdata"
    end

    # Let's save consolidated file in a place where slather can find it
    # https://github.com/SlatherOrg/slather/blob/v2.1.0/lib/slather/project.rb#L150
    dir = 'build/slather/FormatterKit\\ Example'
    run "mkdir -p #{dir}"
    run "xcrun llvm-profdata merge -output=#{dir}/Coverage.profdata #{paths.join " "}"
  end
end

